Template Language:

{{ expr }}
This will output the result of a python expression.
E.g. 
<h1>{{ person.name }}<h1>


{% include <path> %}
This will include another HTML file in place of this line.
E.g. 
{% include header.html %}


{% if <statement> %} X {% end if %}
This will act as an if statement block. X will only be executed if the statement evaluates to true.
E.g. 
{% if person.hasFriends %} {{ person.name }} has {{ len(person.friends) }} friends! {% end if %}


{% for <var> in <count> %} X {% end for %}
This will act as an for statement block. X will executed a number of times. Var is a temporary variable which will start at 0 and count up everytime X is executed till it reaches count.
E.g. 
{% for friend in person.friends %} <li class=’friend’>{% include friend.html %}</li> {% end for %}







Interacting with the Database:

If a function has //<function name>// it is not planed to be in the mvp of the product.

person
A class that contains the user's username, //password//, likes, dislikes, //friends//


person.name()
Returns the current users username, you may pass the argument "ALL"(see e.g.) (Str)
E.g.
>>>person.name("ALL")
["James", "Bob", "Sophie"]

person.nameFind(<Str>)
Returns if that username (<Str>) is in the database (Bool)
E.g.
>>>person.nameFind(“James”)
True


person.good(<Str>)
Returns a list of what music this user (<Str>) have upvoted (list of str)
E.g.
>>>person.good(“James”)
[“music1”,”music2”]


person.bad(<Str>)
Returns a list of what music this user (<Str>) has downvoted (list of str)
E.g.
>>>person.bad(“James”)
[“music3”,”music4”]


person.findSong(<Str1>, <Str2>)
Returns if the user (<Str1>) has voted on this song (<Str2>) (Bool)
E.g.
>>>person.findSong(“James”, “music1”)
True




music
A class that contains the music, and the music’s tags, name, album, and //other metadata//


//music.album(<Str>)//
Returns the album of the song imputed (Str)
E.g.
>>>music.album(“music2”)
“Music2 album”


music.artist(<Str>)
Returns the album of the song imputed (Str)
E.g.
>>>music.artist(“music2”)
“Dave Songwriter”


//music.title()//
Returns the name of the song that is playing (Str)


//music.tags(<Str>)//
Returns a list of the songs (<Str>) tags (list of str)
E.g.
>>>music.tags(“music1”)
[“Rock”,”Pop”]


music.randMusic()
Returns a random song (file)


music.music(<Str>)
Returns a song of the name inputted (file)
E.g.
>>>music.music(“music2”)
Music2.mp3 (or something like that)